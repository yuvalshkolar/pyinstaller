language: python

branches:
  except:
    - /pyup\/.*/

# Make sure we are on Ubuntu 16.04. This fixes the following error, which
# appears on Trusty (Ubuntu 14.04) when testing Linux Python 3.5 and 3.6 with
# PyQt5 5.12: ``relocation error: /tmp/_MEIFdpiBr/libQt5DBus.so.5: symbol
# dbus_message_get_allow_interactive_authorization, version LIBDBUS_1_3 not
# defined in file libdbus-1.so.3 with link time reference``.
dist: xenial

# Cache pip packages. Explicitly name the pip-cache directory since we
# use a custom `install` step which annuls `cache: pip`.
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/py37

os:
  - linux

services:
  # PyQt5 tests require a GUI. See https://docs.travis-ci.com/user/gui-and-headless-browsers/#using-services-xvfb.
  - xvfb

jobs:
  fast_finish: true
  include:
    # macOS is first to account for the delay in starting the build on macOS.
    # This prevents the build from hanging on macOS as the last job to finish
    # in a stage.
    - stage: Test - PyInstaller
      os: osx
      language: generic
      python: 3.7
      cache:
        directories:
          - $HOME/Library/Caches/pip
      script: &script-test-pyinstaller
        # -n 3
        #   Run tests and speed them up by sending them to multiple CPUs.
        #
        # --maxfail 3
        #   End tests after 3 failures.
        #
        # --durations 10
        #   Print the 10 longest tests; see
        #   https://docs.pytest.org/en/latest/usage.html#profiling-test-execution-duration
        - >
          py.test -n 3 --maxfail 3 --durations 10
          tests/unit tests/functional
          --ignore tests/functional/test_libraries.py

    - stage: Test - Libraries
      os: osx
      language: generic
      python: 3.7
      cache:
        directories:
          - $HOME/Library/Caches/pip
      script: &script-test-libraries
        - >
          py.test -n 3 --maxfail 3 --durations 10
          tests/functional/test_libraries.py

    - &test-pyinstaller
      stage: Test - PyInstaller
      python: 2.7
      script: *script-test-pyinstaller

    - &test-libraries
      stage: Test - Libraries
      python: 2.7
      # Run tests and speed them up by sending them to multiple CPUs.
      script: *script-test-libraries

    - &lint
      stage: Lint
      python: 2.7
      script:
        - >
            if [ "$TRAVIS_PULL_REQUEST" != "false" ] ; then
                git fetch origin $TRAVIS_BRANCH:$TRAVIS_BRANCH --depth 1 || travis_terminate 1;
                flake8-diff -v -v -v $TRAVIS_BRANCH || travis_terminate 1;
            fi

    - <<: *test-pyinstaller
      python: 3.5
    - <<: *test-libraries
      python: 3.5

    - <<: *test-pyinstaller
      python: 3.6
    - <<: *test-libraries
      python: 3.6
    - <<: *lint
      python: 3.6

    # Building Python > 3.7 requires OpenSSL 1.0.2 (or 1.1), which is
    # available in xenial (16.04 LTS) only.

    - <<: *test-pyinstaller
      python: 3.7
    - <<: *test-libraries
      python: 3.7

    - <<: *test-pyinstaller
      python: nightly
    - <<: *test-libraries
      python: nightly

  allow_failures:
      # Just tests how PyInstaller performs with upcoming Python
      - python: "nightly"

addons:
  # Python packages should be installed by "pip" via the "test/requirements-library.txt" specification.
  apt:
    packages:
    # lxml dependencies.
    - libxml2-dev
    - libxslt1-dev
    # pyttsx dependencies.
    - libespeak1
    # SciPy dependencies.
    - gfortran
    - libatlas-base-dev
    # Per https://www.riverbankcomputing.com/pipermail/pyqt/2019-February/041363.html,
    # PyQt5 5.12 needs a library not installed by default.
    - libxkbcommon-x11-0

before_install:
  # Perform the manual steps on osx to install python3 and activate venv
  # Per http://steven.casagrande.io/articles/travis-ci-and-if-statements/,
  # ensure the build fails for statements in an ``if`` clause.
  - >
      if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
          brew update || travis_terminate 1;
          brew upgrade python || brew install python || travis_terminate 1;
          python3 -m venv venv || travis_terminate 1;
          source venv/bin/activate;
      fi

install:
  # Update pip.
  - python -m pip install -U pip setuptools wheel | cat

  # Install dependencies for tests.
  - pip install --progress-bar=off -U -r tests/requirements-tools.txt -r tests/requirements-libraries.txt

  # Compile bootloader
  - cd bootloader
  - python waf distclean all
  - cd ..

  # Install PyInstaller.
  - pip install --progress-bar=off -e .

  # Make sure the help options print.
  - python -m pyinstaller -h


script:
  - true

notifications:
    irc:
        channels:
            - "irc.freenode.org#pyinstaller"
        use_notice: true
        # skip_join: true would require +n mode *not to be set on #pyinstaller
        skip_join: false
